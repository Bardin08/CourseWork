@page "/"
@using CourseWork.Shared.Dtos
@using CourseWork.Shared.Models

@using CourseWork.LogicLayer.Abstractions
@using CourseWork.Shared.Helpers
@using CourseWork.UI.Helpers

@inject IBookActionProcessor BookActionProcessor
@inject IAuthorActionProcessor AuthorActionProcessor

<FindBookForm BookSearchingDto="@_bookSearchingDto" ValidationSuccessHandler="@FindBook" />

<AuthorizeView Policy="@Policies.IsAdmin">
    <div>
        <h3> Adminintrator actions: </h3>
        <div class="form-row">
            <button class="btn btn-success  col-md-4" type="submit" @onclick="CreateNewBook">Create new book</button>
        </div>
    </div>
</AuthorizeView>

@if (_bookModels.Any())
{
    <br>
    <br>
    <h2 class="align-self-center">Found books</h2>
    <table class="table">
        <thead>
        <tr>
            <th scope="col">Book name</th>
            <th scope="col">Author</th>
            <th scope="col">Publishment year</th>
            <th scope="col">Descrition</th>
            <th scope="col">Isbn</th>
            <AuthorizeView Policy="@Policies.IsAdmin">
                <th scope="col">Actions</th>
            </AuthorizeView>
        </tr>
        </thead>
        <tbody>
        @foreach (var book in _bookModels)
        {
            <tr>
                <td>@book.Name</td>
                <td>@book.Author.FirstName @book.Author.LastName</td>
                <td>@book.PublishYear</td>
                <td>@book.Description</td>
                <td>@book.Isbn</td>
                <AuthorizeView Policy="@Policies.IsAdmin">
                    <td>
                        <button class="btn btn-info m-2 w-auto" @onclick="() => ShowBookModificationPopUp(book)">Edit</button> <br> 
                        <button class="btn btn-danger m-2 w-auto" @onclick="() => DeleteBook(book)">Delete</button> <br> 
                    </td>
                </AuthorizeView>
            </tr>
        }
        </tbody>
    </table>
}

@if (_showBookModificationPopUp)
{
    <div class="modal" tabindex="-1" style="display:block" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title">Edit @_modifiableBook.BookName</h3>
                    <button type="button" class="close" @onclick="HideBookModificationPopUp">
                        <span aria-hidden="true">X</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-row m-2">
                        <input class="form-control col-md-12 m-1" type="text"
                               placeholder="Book name"
                               @bind="_modifiableBook.BookName"/>
                    </div>
    
                    <div class="form-row m-2">
                        <input class="form-control col-md-9 m-1" type="text"
                               placeholder="Author name"
                               @bind="_modifiableBook.Author.FirstName" readonly/>
                        <button type="submit" class="btn btn-info col-md-2 m-1" @onclick="() => ShowAuthorModificationPopUp(_modifiableBook.Author)"> Edit </button>
                    </div>
                        
                    <div class="form-row m-2">
                        <input class="form-control col-md-12 m-1" type="text"
                               placeholder="Publish year"
                               @bind="_modifiableBook.PublishYear"/>
                    </div>
                        
                    <div class="form-row m-2">
                        <input class="form-control col-md-12 m-1" type="text"
                               placeholder="Isbn"
                               @bind="_modifiableBook.Isbn"/>
                    </div>
                        
                    <div class="form-row m-2">
                        <input class="form-control col-md-12 m-1" type="text"
                               placeholder="Keywords"
                               @bind="@_modifiableBook.KeyWordsString"/>
                    </div>
                        
                    <div class="form-row m-2">
                        <textarea class="form-control col-md-12 m-1" type="text"
                               placeholder="Book description"
                               @bind="_modifiableBook.Description" maxlength="1024"></textarea>
                    </div>
    
                    <br/><br/>
                    <button class="btn btn-primary" @onclick="SaveModifiedBook">
                        Save
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@if (_showAuthorModificationPopUp)
{
    <div class="modal" tabindex="-1" style="display:block" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title">Edit @_modifiableAuthor.FirstName @_modifiableAuthor.LastName</h3>
                    <button type="button" class="close" @onclick="HideAuthorModificationPopUp">
                        <span aria-hidden="true">X</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-row m-2">
                        <input class="form-control col-md-12 m-1" type="text"
                            placeholder="Book name"
                            @bind="@_modifiableAuthor.FirstName"/>
                    </div>

                    <div class="form-row m-2">
                        <input class="form-control col-md-9 m-1" type="text"
                            placeholder="Author name"
                            @bind="@_modifiableAuthor.LastName"/>
                    </div>
                    
                    <br/><br/>
                    <button class="btn btn-primary" @onclick="SaveModifiedAuthor">
                        Save
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@if (_showBookCreationPopUp)
{
<div class="modal" tabindex="-1" style="display:block" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">New book creation form</h3>
                <button type="button" class="close" @onclick="HideBookCreationPopUp">
                    <span aria-hidden="true">X</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-row m-2">
                    <input class="form-control col-md-12 m-1" type="text"
                           placeholder="Book name"
                           @bind="_newBookDto.BookName"/>
                </div>
                
                <div class="form-row m-2">
                    <input class="form-control col-md-12 m-1" type="text"
                           placeholder="Book`s author first name"
                           @bind="_newBookDto.Author.FirstName"/>
                </div>
                
                <div class="form-row m-2">
                    <input class="form-control col-md-12 m-1" type="text"
                           placeholder="Book`s author last name"
                           @bind="_newBookDto.Author.LastName"/>
                </div>
                
                <div class="form-row m-2">
                    <input class="form-control col-md-12 m-1" type="text"
                           placeholder="Publish year"
                           @bind="_newBookDto.PublishYear"/>
                </div>
                    
                <div class="form-row m-2">
                    <input class="form-control col-md-12 m-1" type="text"
                           placeholder="Isbn"
                           @bind="_newBookDto.Isbn"/>
                </div>
                    
                <div class="form-row m-2">
                    <input class="form-control col-md-12 m-1" type="text"
                           placeholder="Keywords"
                           @bind="@_newBookDto.KeyWordsString"/>
                </div>
                    
                <div class="form-row m-2">
                    <textarea class="form-control col-md-12 m-1" type="text"
                           placeholder="Book description"
                           @bind="_newBookDto.Description" maxlength="1024"></textarea>
                </div>

                <br/><br/>
                <button class="btn btn-primary" @onclick="SaveNewBookToDb">
                    Save
                </button>
            </div>
        </div>
    </div>
</div>

}

@code {
    readonly BookSearchingDto _bookSearchingDto = new BookSearchingDto();
    private List<BookModel> _bookModels = new List<BookModel>();
    
    private bool _showBookModificationPopUp;
    private bool _showAuthorModificationPopUp;
    private BookDto _modifiableBook;
    private AuthorModel _modifiableAuthor;

    private bool _showBookCreationPopUp;
    private BookDto _newBookDto;
    
    private async void FindBook()
    {
        _bookModels = (await BookActionProcessor.GetBooks(_bookSearchingDto)).ToList();
    }
    
    private void DeleteBook(BookModel book)
    {
        _bookModels.RemoveAll(b => b.Id == book.Id);
        BookActionProcessor.RemoveBookById(book.Id);
    }
    
    private async void SaveModifiedBook()
    {
        var updatedBookIndex = _bookModels.IndexOf(_bookModels.Find(b => b.Id == _modifiableBook.Id));
        _modifiableBook.KeyWordModels = _modifiableBook.KeyWordsString.KeywordModelsListFromKeywordsString();
        _bookModels[updatedBookIndex] = _modifiableBook.BookModelFromBookDto();
        
        HideBookModificationPopUp();

        await BookActionProcessor.UpdateBookById(_modifiableBook.Id, _modifiableBook);
    }
    
    private void ShowBookModificationPopUp(BookModel book)
    {
        _showBookModificationPopUp = true;
        _modifiableBook = book.BookDtoFromBookModel();
    }

    private void HideBookModificationPopUp()
    {
        _showBookModificationPopUp = false;
    }

    private async void SaveModifiedAuthor()
    {
        HideAuthorModificationPopUp();
        _modifiableBook.Author = _modifiableAuthor;
        await AuthorActionProcessor.UpdateAuthor(_modifiableAuthor.AuthorDtoFromAuthorModel());
    }
    
    private void ShowAuthorModificationPopUp(AuthorModel author)
    {
        _showAuthorModificationPopUp = true;
        _modifiableAuthor = author;
    }

    private void HideAuthorModificationPopUp()
    {
        _showAuthorModificationPopUp = false;
    }

    private Task CreateNewBook()
    {
        _newBookDto = new BookDto();
        _showBookCreationPopUp = true;
        return Task.CompletedTask;
    }

    private void HideBookCreationPopUp()
    {
        _showBookCreationPopUp = false;
    }

    private void SaveNewBookToDb()
    {
        HideBookCreationPopUp();

        if (_newBookDto == null) return;
        
        _newBookDto.Id = Guid.NewGuid().ToString();
        _newBookDto.Author.Id = Guid.NewGuid().ToString();
        _newBookDto.KeyWordModels = _newBookDto.KeyWordsString.KeywordModelsListFromKeywordsString();
        
        BookActionProcessor.CreateBook(_newBookDto);
    }
}